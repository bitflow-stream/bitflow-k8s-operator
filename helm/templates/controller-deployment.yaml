{{- if .Values.controller.deployment.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.controller.deployment.name }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "chart" . }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.controller.deployment.serviceAccount }}
      serviceAccountName: {{ . | quote }}
      {{- end }}
      {{- with .Values.controller.deployment.image.pullSecrets }}
      imagePullSecrets:
      {{ toYaml . | nindent 6 }}
      {{- end }}
      volumes:
        - name: tz-config
          hostPath:
            path: /etc/localtime
      containers:
        - name: controller
          image: "{{ .Values.controller.deployment.image.repository }}"
          imagePullPolicy: "{{ .Values.controller.deployment.image.pullPolicy }}"
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
          ports:
            - name: rest-api
              containerPort: {{ .Values.controller.deployment.port }}
          # args: [ "-q" ]
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            #- name: POD_IP
            #  valueFrom:
            #    fieldRef:
            #      fieldPath: status.podIP
            - name: POD_IP
              value: "{{ .Values.controller.service.name }}" # Make pods access the API through the Kubernetes DNS
            - name: CONTROLLER_NAME
              value: "bitflow-controller"
            - name: CONFIG_MAP
              value: "{{ .Values.controller.configmap.name }}"
            - name: API_LISTEN_PORT
              value: "{{ .Values.controller.deployment.port }}"
            - name: CONCURRENT_RECONCILE
              value: "{{ .Values.controller.deployment.config.concurrent_reconcile }}"
            - name: POD_ID_LABELS
              value: "{{ .Values.controller.deployment.config.pod_id_labels }}"
            - name: RECORD_STATISTICS
              value: "{{ .Values.controller.deployment.config.record_statistics }}"
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.controller.deployment.port }}
            periodSeconds: {{ .Values.controller.deployment.livenessProbePeriod }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.controller.deployment.port }}
            periodSeconds: {{ .Values.controller.deployment.readinessProbeDelay }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}

      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}